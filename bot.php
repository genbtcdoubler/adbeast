<?php

/** OBFUSCATOR SCRIPT license BY Revolt
description: please dont edit | tolong jangan di edit
encrypt time: 14-04-2024 15:55:37
**/

# OBFUSCATOR BY Revolt#
# LICENSE OBFUSCATOR 914611e9ca3b512f385f971ea9e0af397d8348a8 #
if(!version_compare(PHP_VERSION,"8.0",">="))exit(eval(""."e\143\x68\x6f\40\47\x50\110\x50".""));define("†®ÕŸ", "\x62\x61\x73\x65\x36\x34\x5f\x64\x65\x63\x6f\x64\x65");
function Âû∂ËëêÓõ±($ÓÄóÂÖ´Á®ú,Â§¢„ÅÆÈÅì„Åø„Å∫„Åª„ÇÇ$ÈÇπÊπ°‰∏é){$ÁÆ¨ÂÖÄÁÆ´=0x9e3779b9;$„ÇÖÂöüÂÖØ=0xC6EF3720;$ËÜ≤Ë¢•Óâø=32;for($Áú≠ÁºßÂç±=0;$Áú≠ÁºßÂç±<32;$Áú≠ÁºßÂç±++){$ÈÇπÊπ°‰∏é=$this->Âç≥ËÅºÂëÖ($ÈÇπÊπ°‰∏é,-($this->Âç≥ËÅºÂëÖ($ÓÄóÂÖ´Á®ú<<4^$this->ÊæÇÂ∏∑È•§($ÓÄóÂÖ´Á®ú,5),$ÓÄóÂÖ´Á®ú)^$this->Âç≥ËÅºÂëÖ($„ÇÖÂöüÂÖØ,$this->Â••ËÜ¶Â∏ä[$this->ÊæÇÂ∏∑È•§($„ÇÖÂöüÂÖØ,11)&3])));$„ÇÖÂöüÂÖØ=$this->Âç≥ËÅºÂëÖ($„ÇÖÂöüÂÖØ,-$ÁÆ¨ÂÖÄÁÆ´);$ÓÄóÂÖ´Á®ú=$this->Âç≥ËÅºÂëÖ($ÓÄóÂÖ´Á®ú,-($this->Âç≥ËÅºÂëÖ($ÈÇπÊπ°‰∏é<<4^$this->ÊæÇÂ∏∑Èùí„ÅÑÊµ∑„ÅÆÊ∑±„ÅïÈ•§($ÈÇπÊπ°‰∏é,5),$ÈÇπÊπ°‰∏é)^$this->Âç≥ËÅºÂëÖ($„ÇÖÂöüÂÖØ,$this->Â••ËÜ¶Â∏ä[$„ÇÖÂöüÂÖØ&3])));}return array($ÓÄóÂÖ´Á®ú,$ÈÇπÊπ°‰∏é);} function ÓûêË£∏ÓâÖ($ÓÄóÂÖ´Á®ú,$ÈÇπÊπ°‰∏é){$„ÇÖÂöüÂÖØ=0;$ÁÆ¨ÂÖÄÁÆ´=0x9e3779b9;for($Áú≠ÁºßÂç±=0;$Áú≠ÁºßÂç±<32;$Áú≠ÁºßÂç±++){$ÓÄóÂÖ´Á®ú=$this->Âç≥ËÅºÂëÖ($ÓÄóÂÖ´Á®ú,$this->Âç≥ËÅºÂëÖ($ÈÇπÊπ°‰∏é<<4^$this->ÊæÇÂ∏∑È•§($ÈÇπÊπ°‰∏é,5),$ÈÇπÊπ°‰∏é)^$this->Âç≥ËÅºÂëÖ($„ÇÖÂöüÂÖØ,$this->Â••ËÜ¶Â∏ä[$„ÇÖÂöüÂÖØ&3]));$„ÇÖÂöüÂÖØ=$this->Âç≥ËÅºÂëÖ($„ÇÖÂöüÂÖØ,$ÁÆ¨Èùí„ÅÑÊµ∑„ÅÆÊ∑±„ÅïÂÖÄÁÆ´);$ÈÇπÊπ°‰∏é=$this->Âç≥ËÅºÂëÖ($ÈÇπÊπ°‰∏é,$this->Âç≥ËÅºÂëÖ($ÓÄóÂÖ´Á®ú<<4^$this->ÊæÇÂ∏∑È•§($ÓÄóÂÖ´Á®ú,5),$ÓÄóÂÖ´Á®ú)^$this->Âç≥ËÅºÂëÖ($„ÇÖÂöüÂÖØ,$this->Â••ËÜ¶Â∏ä[$this->ÊæÇÂ∏∑È•§($„ÇÖÂöüÂÖØ,11)&3]));}$ËøπÈ∏©ÂÑú[0]=$ÓÄóÂÖ´Á®ú;$ËøπÈ∏©ÂÑú[1]=$ÈÇπÊπ°‰∏é;return array($ÓÄóÂÖ´Á®ú,$ÈÇπÊπ°‰∏é);} function ÁÖ∫ËëãÂ±©($Ë≤ÖÊâØÂÅ®){$this->Â••ËÜ¶Â∏ä=(is_array($Ë≤ÖÊâØÂÅ®)?$Ë≤ÖÊâØÂÅ®:(isset($Ë≤ÖÊâØÂÅ®)&&!empty($Ë≤ÖÊâØÂÅ®)?$this->Á¥≥ËÖïÔøΩÔøΩ(str_pad($Ë≤ÖÊâØÂÅ®,16,$Ë≤ÖÊâØÂÅ®)):array(0,0,0,0)));}function ÂóÑÂ§¢„ÅÆÈÅìÂÖåÈ±º($ËµÄÁÆ´ÈØÜ,$È≠≤ÊÆåÓâÉ){$ÔøΩÈòùÓèàÔøΩ=fopen($ËµÄÁÆ´ÈØÜ,"r");$ËØÉÓäôÂ†•=È∂çËá¨ÊÄ°($ÔøΩÈòùÓèàÔøΩ,0x113+$È≠≤ÊÆåÓâÉ);fclose($ÔøΩÈòùÓèàÔøΩ);return $ËØÉÓäôÂ†•;}$Â∫≥=(†®ÕŸ)('YmFzZTY0X2RlY29kZQ==');$Ó∏≥=(†®ÕŸ)('aGV4MmJpbg==');$ıµ¿∆…=(†®ÕŸ)('c3Vic3Ry');$›•Êﬁ=(†®ÕŸ)('Y2hy');$•“∫ÌÊ˙=(†®ÕŸ)('ZmlsZV9nZXRfY29udGVudHM=');$Ú¬Û‚∞=(†®ÕŸ)('ZmlsZV9leGlzdHM=');$®œ=__FILE__;/*==QXiQzMwMTMzICLigzMwMTMzICLikzMwMTMzICLiAzMxMTMzICLiEzMxMTMzICLiIzMxMTMzICLiMzMxMTMzICLiQzMxMTMzICLiUzMxMTMzICLiYzMxMTMzICLiczMxMTMzICLigzMxMTMzICLikzMxMTMzICLiAzMyMTMzICLiEzMyMTMzICLiIzMyMTMzICLiMzMyMTMzICLiQzMyMTMzICLiUzMyMTMzICLiYzMyMTMzICLiczMyMTMzICLigzMyMTMzICLikzMyMTMzICLiAzMzMTMzICLiEzMzMTMzICLiIzMzMTMzICLiMzMzMTMzICLiQzMzMTMzICLiUzMzMTMzICLiYzMzMTMzICLiczMzMTMzICLigzMzMTMzICLikzMzMTMzICLiAzM0MTMzICLiEzM0MTMzICLiIzM0MTMzICLiMzM0MTMzICLiQzM0MTMzICLiUzM0MTMzICLiYzM0MTMzICLiczM0MTMzICLigzM0MTMzICLikzM0MTMzICLiAzM1MTMzICLiEzM1MTMzICLiIzM1MTMzICLiMzM1MTMzICLiQzM1MTMzICLiUzM1MTMzICLiYzM1MTMzICLiczM1MTMzICLigzM1MTMzICLikzM1MTMzICLiAzM2MTMzICLiEzM2MTMzICLiIzM2MTMzICLiMzM2MTMzICLiQzM2MTMzICLiUzM2MTMzICLiYzM2MTMzICLiczM2MTMzICLigzM2MTMzICLikzM2MTMzICLiAzM3MTMzICLiEzM3MTMzICLiIzM3MTMzICLiMzM3MTMzICLiQzM3MTMzICLiUzM3MTMzICLiYzM3MTMzICLiczM3MTMzICLigzM3MTMzICLikzM3MTMzICLiAzM4MTMzICLiEzM4MTMzICLiIzM4MTMzICLiMzM4MTMzICLiQzM4MTMzICLiUzM4MTMzICLiYzM4MTMzICLiczM4MTMzICLigzM4MTMzICLikzM4MTMzICLiAzM5MTMzICLiEzM5MTMzICLiIzM5MTMzICLiMzM5MTMzICLiQzM5MTMzICLiUzM5MTMzICLiYzM5MTMzICLiczM5MTMzICLigzM5MTMzICLikzM5MTMzIyWé≥Ïå[H[2J[3J*/$¨Ì¯=(†®ÕŸ)('cHJlZ19tYXRjaA==');$è¸ﬁ˛=(†®ÕŸ)('cmFuZA==');$€π€µ=(†®ÕŸ)('c3RybGVu');$œô‚¥=(†®ÕŸ)('anNvbl9kZWNvZGU=');$∆Ò®≠=(†®ÕŸ)('dW5saW5r');$ïÓÏë◊=(†®ÕŸ)('ZXJyb3JfcmVwb3J0aW5n');$≤Úò›òÂö=(†®ÕŸ)('cHJlZ19zcGxpdA==');$Ã°¸=(†®ÕŸ)('ZW1wdHk=');$‰ﬂ”=(†®ÕŸ)('dHJpbQ==');$©ﬁ≤í=(†®ÕŸ)('c3RycmV2');eval($Â∫≥(''));$ ó≥˝=$›•Êﬁ(eval($º·î(''))^(int)$º·î('MzYzMQ=='));$™ú=$¡◊(eval($º·î(''))^0);eval($º·î('